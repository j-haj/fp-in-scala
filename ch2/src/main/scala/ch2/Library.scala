/*
 * This Scala source file was generated by the Gradle 'init' task.
 */
package ch2

class Library {
  def isSorted[A](as: Array[A], ordered: (A, A) => Boolean): Boolean = {
    def loop(status: Boolean, as: Seq[A]): Boolean = {
      if (status) {
        as match {
          case Seq(x) => status
          case Seq(x, y, xs @ _*) => loop(status && ordered(x, y), xs)
          case _ => status
        }
      } else {
        false
      }
    }
    loop(true, as.toSeq)
  }

  def isSorted2[A](as: Array[A])(ordered: (A, A) => Boolean): Boolean = {
    isSorted(as, ordered)
  }

  def curry[A,B,C](f: (A, B) => C): A => (B => C) = {
    (a: A) => (b: B) => f(a, b)
  }

  def uncurry[A,B,C](f: A => B => C): (A, B) => C = {
    (a: A, b: B) => f(a)(b)
  }

  def compose[A,B,C](f: B => C, g: A => B): A => C = {
    (a: A) => f(g(a))
  }
}
